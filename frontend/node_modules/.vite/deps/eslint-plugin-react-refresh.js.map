{
  "version": 3,
  "sources": ["../../eslint-plugin-react-refresh/index.js"],
  "sourcesContent": ["\"use strict\";\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __export = (target, all) => {\r\n  for (var name in all)\r\n    __defProp(target, name, { get: all[name], enumerable: true });\r\n};\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\r\n\r\n// src/index.ts\r\nvar index_exports = {};\r\n__export(index_exports, {\r\n  configs: () => configs,\r\n  default: () => index_default,\r\n  rules: () => rules\r\n});\r\nmodule.exports = __toCommonJS(index_exports);\r\n\r\n// src/only-export-components.ts\r\nvar reactComponentNameRE = /^[A-Z][a-zA-Z0-9]*$/u;\r\nvar onlyExportComponents = {\r\n  meta: {\r\n    messages: {\r\n      exportAll: \"This rule can't verify that `export *` only exports components.\",\r\n      namedExport: \"Fast refresh only works when a file only exports components. Use a new file to share constants or functions between components.\",\r\n      anonymousExport: \"Fast refresh can't handle anonymous components. Add a name to your export.\",\r\n      localComponents: \"Fast refresh only works when a file only exports components. Move your component(s) to a separate file.\",\r\n      noExport: \"Fast refresh only works when a file has exports. Move your component(s) to a separate file.\",\r\n      reactContext: \"Fast refresh only works when a file only exports components. Move your React context(s) to a separate file.\"\r\n    },\r\n    type: \"problem\",\r\n    schema: [\r\n      {\r\n        type: \"object\",\r\n        properties: {\r\n          allowExportNames: { type: \"array\", items: { type: \"string\" } },\r\n          allowConstantExport: { type: \"boolean\" },\r\n          customHOCs: { type: \"array\", items: { type: \"string\" } },\r\n          checkJS: { type: \"boolean\" }\r\n        },\r\n        additionalProperties: false\r\n      }\r\n    ]\r\n  },\r\n  defaultOptions: [],\r\n  create: (context) => {\r\n    const {\r\n      allowExportNames,\r\n      allowConstantExport = false,\r\n      customHOCs = [],\r\n      checkJS = false\r\n    } = context.options[0] ?? {};\r\n    const filename = context.filename;\r\n    if (filename.includes(\".test.\") || filename.includes(\".spec.\") || filename.includes(\".cy.\") || filename.includes(\".stories.\")) {\r\n      return {};\r\n    }\r\n    const shouldScan = filename.endsWith(\".jsx\") || filename.endsWith(\".tsx\") || checkJS && filename.endsWith(\".js\");\r\n    if (!shouldScan) return {};\r\n    const allowExportNamesSet = allowExportNames ? new Set(allowExportNames) : void 0;\r\n    const reactHOCs = [\"memo\", \"forwardRef\", ...customHOCs];\r\n    const canBeReactFunctionComponent = (init) => {\r\n      if (!init) return false;\r\n      const jsInit = skipTSWrapper(init);\r\n      if (jsInit.type === \"ArrowFunctionExpression\") return true;\r\n      if (jsInit.type === \"CallExpression\" && jsInit.callee.type === \"Identifier\") {\r\n        return reactHOCs.includes(jsInit.callee.name);\r\n      }\r\n      return false;\r\n    };\r\n    return {\r\n      Program(program) {\r\n        let hasExports = false;\r\n        let hasReactExport = false;\r\n        let reactIsInScope = false;\r\n        const localComponents = [];\r\n        const nonComponentExports = [];\r\n        const reactContextExports = [];\r\n        const handleExportIdentifier = (identifierNode, isFunction, init) => {\r\n          if (identifierNode.type !== \"Identifier\") {\r\n            nonComponentExports.push(identifierNode);\r\n            return;\r\n          }\r\n          if (allowExportNamesSet == null ? void 0 : allowExportNamesSet.has(identifierNode.name)) return;\r\n          if (allowConstantExport && init && constantExportExpressions.has(skipTSWrapper(init).type)) {\r\n            return;\r\n          }\r\n          if (isFunction) {\r\n            if (reactComponentNameRE.test(identifierNode.name)) {\r\n              hasReactExport = true;\r\n            } else {\r\n              nonComponentExports.push(identifierNode);\r\n            }\r\n          } else {\r\n            if (init && init.type === \"CallExpression\" && // createContext || React.createContext\r\n            (init.callee.type === \"Identifier\" && init.callee.name === \"createContext\" || init.callee.type === \"MemberExpression\" && init.callee.property.type === \"Identifier\" && init.callee.property.name === \"createContext\")) {\r\n              reactContextExports.push(identifierNode);\r\n              return;\r\n            }\r\n            if (init && // Switch to allowList?\r\n            notReactComponentExpression.has(init.type)) {\r\n              nonComponentExports.push(identifierNode);\r\n              return;\r\n            }\r\n            if (reactComponentNameRE.test(identifierNode.name)) {\r\n              hasReactExport = true;\r\n            } else {\r\n              nonComponentExports.push(identifierNode);\r\n            }\r\n          }\r\n        };\r\n        const isHOCCallExpression = (node) => {\r\n          const isCalleeHOC = (\r\n            // support for react-redux\r\n            // export default connect(mapStateToProps, mapDispatchToProps)(...)\r\n            node.callee.type === \"CallExpression\" && node.callee.callee.type === \"Identifier\" && node.callee.callee.name === \"connect\" || // React.memo(...)\r\n            node.callee.type === \"MemberExpression\" && node.callee.property.type === \"Identifier\" && reactHOCs.includes(node.callee.property.name) || // memo(...)\r\n            node.callee.type === \"Identifier\" && reactHOCs.includes(node.callee.name)\r\n          );\r\n          if (!isCalleeHOC) return false;\r\n          if (node.arguments.length === 0) return false;\r\n          const arg = skipTSWrapper(node.arguments[0]);\r\n          switch (arg.type) {\r\n            case \"Identifier\":\r\n              return true;\r\n            case \"FunctionExpression\":\r\n              if (!arg.id) return false;\r\n              handleExportIdentifier(arg.id, true);\r\n              return true;\r\n            case \"CallExpression\":\r\n              return isHOCCallExpression(arg);\r\n            default:\r\n              return false;\r\n          }\r\n        };\r\n        const handleExportDeclaration = (node) => {\r\n          if (node.type === \"VariableDeclaration\") {\r\n            for (const variable of node.declarations) {\r\n              handleExportIdentifier(\r\n                variable.id,\r\n                canBeReactFunctionComponent(variable.init),\r\n                variable.init\r\n              );\r\n            }\r\n          } else if (node.type === \"FunctionDeclaration\") {\r\n            if (node.id === null) {\r\n              context.report({ messageId: \"anonymousExport\", node });\r\n            } else {\r\n              handleExportIdentifier(node.id, true);\r\n            }\r\n          } else if (node.type === \"CallExpression\") {\r\n            const isValid = isHOCCallExpression(node);\r\n            if (isValid) {\r\n              hasReactExport = true;\r\n            } else {\r\n              context.report({ messageId: \"anonymousExport\", node });\r\n            }\r\n          } else if (node.type === \"TSEnumDeclaration\") {\r\n            nonComponentExports.push(node.id);\r\n          }\r\n        };\r\n        for (const node of program.body) {\r\n          if (node.type === \"ExportAllDeclaration\") {\r\n            if (node.exportKind === \"type\") continue;\r\n            hasExports = true;\r\n            context.report({ messageId: \"exportAll\", node });\r\n          } else if (node.type === \"ExportDefaultDeclaration\") {\r\n            hasExports = true;\r\n            const declaration = skipTSWrapper(node.declaration);\r\n            if (declaration.type === \"VariableDeclaration\" || declaration.type === \"FunctionDeclaration\" || declaration.type === \"CallExpression\") {\r\n              handleExportDeclaration(declaration);\r\n            }\r\n            if (declaration.type === \"Identifier\") {\r\n              handleExportIdentifier(declaration);\r\n            }\r\n            if (declaration.type === \"ArrowFunctionExpression\") {\r\n              context.report({ messageId: \"anonymousExport\", node });\r\n            }\r\n          } else if (node.type === \"ExportNamedDeclaration\") {\r\n            if (node.exportKind === \"type\") continue;\r\n            hasExports = true;\r\n            if (node.declaration) {\r\n              handleExportDeclaration(skipTSWrapper(node.declaration));\r\n            }\r\n            for (const specifier of node.specifiers) {\r\n              handleExportIdentifier(\r\n                specifier.exported.type === \"Identifier\" && specifier.exported.name === \"default\" ? specifier.local : specifier.exported\r\n              );\r\n            }\r\n          } else if (node.type === \"VariableDeclaration\") {\r\n            for (const variable of node.declarations) {\r\n              if (variable.id.type === \"Identifier\" && reactComponentNameRE.test(variable.id.name) && canBeReactFunctionComponent(variable.init)) {\r\n                localComponents.push(variable.id);\r\n              }\r\n            }\r\n          } else if (node.type === \"FunctionDeclaration\") {\r\n            if (reactComponentNameRE.test(node.id.name)) {\r\n              localComponents.push(node.id);\r\n            }\r\n          } else if (node.type === \"ImportDeclaration\" && node.source.value === \"react\") {\r\n            reactIsInScope = true;\r\n          }\r\n        }\r\n        if (checkJS && !reactIsInScope) return;\r\n        if (hasExports) {\r\n          if (hasReactExport) {\r\n            for (const node of nonComponentExports) {\r\n              context.report({ messageId: \"namedExport\", node });\r\n            }\r\n            for (const node of reactContextExports) {\r\n              context.report({ messageId: \"reactContext\", node });\r\n            }\r\n          } else if (localComponents.length) {\r\n            for (const node of localComponents) {\r\n              context.report({ messageId: \"localComponents\", node });\r\n            }\r\n          }\r\n        } else if (localComponents.length) {\r\n          for (const node of localComponents) {\r\n            context.report({ messageId: \"noExport\", node });\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n};\r\nvar skipTSWrapper = (node) => {\r\n  if (node.type === \"TSAsExpression\" || node.type === \"TSSatisfiesExpression\") {\r\n    return node.expression;\r\n  }\r\n  return node;\r\n};\r\nvar constantExportExpressions = /* @__PURE__ */ new Set([\r\n  \"Literal\",\r\n  // 1, \"foo\"\r\n  \"UnaryExpression\",\r\n  // -1\r\n  \"TemplateLiteral\",\r\n  // `Some ${template}`\r\n  \"BinaryExpression\"\r\n  // 24 * 60\r\n]);\r\nvar notReactComponentExpression = /* @__PURE__ */ new Set([\r\n  \"ArrayExpression\",\r\n  \"AwaitExpression\",\r\n  \"BinaryExpression\",\r\n  \"ChainExpression\",\r\n  \"ConditionalExpression\",\r\n  \"Literal\",\r\n  \"LogicalExpression\",\r\n  \"ObjectExpression\",\r\n  \"TemplateLiteral\",\r\n  \"ThisExpression\",\r\n  \"UnaryExpression\",\r\n  \"UpdateExpression\"\r\n]);\r\n\r\n// src/index.ts\r\nvar rules = {\r\n  \"only-export-components\": onlyExportComponents\r\n};\r\nvar plugin = { rules };\r\nvar configs = {\r\n  recommended: {\r\n    name: \"react-refresh/recommended\",\r\n    plugins: { \"react-refresh\": plugin },\r\n    rules: { \"react-refresh/only-export-components\": \"error\" }\r\n  },\r\n  vite: {\r\n    name: \"react-refresh/vite\",\r\n    plugins: { \"react-refresh\": plugin },\r\n    rules: {\r\n      \"react-refresh/only-export-components\": [\r\n        \"error\",\r\n        { allowConstantExport: true }\r\n      ]\r\n    }\r\n  }\r\n};\r\nvar index_default = { rules, configs };\r\n// Annotate the CommonJS export names for ESM import in node:\r\n0 && (module.exports = {\r\n  configs,\r\n  rules\r\n});\r\n"],
  "mappings": "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",
  "names": []
}
